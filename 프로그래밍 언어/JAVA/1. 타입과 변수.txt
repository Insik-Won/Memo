■ 1. 타입과 변수

◎ 자바의 타입
	- 자바에서 타입은 크게 두가지로 나늰다 : 기본 타입, 참조 타입
	- 기본 타입은 값 타입으로 스택에 메모리가 저장된다. 실제 값이 변수에 저장되며 생성과 파괴를 변수와 함께 한다.
	- 참조 타입은 주소 타입으로 힙에 메모리가 저장된다. 실제 값은 힙에 저장되며 변수에 있는 값은 힙에 저장되어 있는 주소이다. 메모리 파괴는 가비지 컬렉터에 의해 결정된다.
	
◎ 자바의 변수
	- 자바는 변수를 다음과 같이 선언한다: 타입 변수이름; (ex. int num;)
	- 자바의 변수는 선언 시부터 타입이 정해진다. (정적 타입)
	- 변수 이름 앞에 final을 붙이면 초기화 시에만 값을 정할 수 있고 그 뒤에는 값을 바꾸지 못한다.
	
	- 기본 타입의 변수:
		- 변수에 값이 담긴다.
		- 복사 시 값이 복사된다. 같은 값이 두개가 된다.
		- 해당 블럭을 나가면 값은 사라진다.
	- 참조 타입의 변수:
		- 변수에 객체의 주소가 담긴다.
		- 복사 시 객체의 주소가 복사된다. 그러므로 객체는 여전히 하나만 있다. 
		- 해당 블럭을 나가도 객체가 여전히 참조되고 있다면 객체는 사라지지 않는다.
	
◎ 기본 타입 (primitive type)
	- byte : 1바이트 정수
	- short : 2바이트 정수
	- int : 4바이트 정수
	- long : 8바이트 정수
	- float : 4바이트 부동소수점 실수
	- double : 8바이트 부동소수점 실수
	- boolean : 1비트 논리값
	- char : 부호 없는 16비트 유니코드 문자값
	
◎ 참조 타입 (reference type)
	- 배열
	- 클래스 : Object가 최상위 타입이며 String도 이 클래스에 속한다.
	- 열거형 : 필드와 메소드도 선언 가능하다.
	
◎ Object 클래스
	- 자바의 모든 클래스는 이 Object 클래스를 암시적으로 상속받는다.
		- toString 메소드 : 객체를 문자열로 표현한다.
		- clone 메소드 : 모든 필드를 복사해 새로운 객체를 만든다. 
			- Cloneable 인터페이스를 구현해 clone이 안전하다고 명시해줘야 된다.
		- equals 메소드 : 객체와 다른 객체를 비교한다.
		- hashCode 메소드 : 같은 객체라면 같은 hashCode를 반환해야한다.
		- finalize 메소드 : 객체가 소멸될 때 호출되는 함수이다. 일반적인 상황에서는 사용하지 않는다.
	
◎ Wrapper 클래스
	- 자바는 8개의 기본 타입을 참조 타입으로 래핑할 수 있는 클래스 8개를 제공한다 : Byte, Short, Int, Long, Float, Double, Boolean, Chararacter
	- 자바의 래퍼 클래스는 자동 박싱/언박싱을 지원한다.